moglo byc w mainie
 List<Jednostka>listaJednostek=new LinkedList<>();
        Mapa mapa = new Mapa();
        mapa.losujkonfiguracje(mapa.tablica);
        mapa.rozmiescPola(mapa.tablicaPol);
        Dorosly mezczyzna = new Dorosly(mapa,100,100,0, mapa.tablicaPol[0][0],"Zbigniew");
        Dorosly kobieta = new Dorosly(mapa,100,100,0, mapa.tablicaPol[0][0],"Katarzyna");
        Dziecko dziecko = new Dziecko(mapa,100,100,0, mapa.tablicaPol[0][0],"Ludwik");
        Zwierze owca = new Zwierze(mapa,100,100,0 , mapa.tablicaPol[0][0],"Beczka");
        Zwierze swinia = new Zwierze(mapa,100,100,0, mapa.tablicaPol[0][0],"Chrumkas");
        listaJednostek.add(mezczyzna);
        listaJednostek.add(kobieta);
        listaJednostek.add(dziecko);
        listaJednostek.add(owca);
        listaJednostek.add(swinia);
        while (listaJednostek.size()>=1)
        {
            for (Jednostka jednostka :listaJednostek) {
               jednostka.nowaLokalizacja=jednostka.pobierzNowaLokalizacje(mapa.tablicaPol,10,10);
            }
        }
        System.out.println("ZBIJEW TO ZIOMAL");
        for (int i=0;i<mapa.dlugosc;i++)
        { for(int j=0;j<mapa.szerokosc;j++)
                System.out.println("tablica["+i+"]["+j+"]="+mapa.tablica[i][j]);}
    }
    jednostka.nowaLokalizacja=jednostka.pobierzNowaLokalizacje(mapa.tablicaPol,mapa.dlugosc,mapa.szerokosc);
                if(licznikTur==0)   //tylko w pierwszej turze jednostki maja zadana lokalizacje - tablicaPol[0][0]
                {
                    odlegloscPoczatkowa=jednostka.obliczOdlegloscPoczatkowa(jednostka);
                    if(jednostka.czyDobraOdlegosc(odlegloscPoczatkowa)==false)
                        while (jednostka.czyDobraOdlegosc(odlegloscPoczatkowa)==false)
                        {
                            jednostka.nowaLokalizacja=jednostka.pobierzNowaLokalizacje(mapa.tablicaPol,mapa.dlugosc,mapa.szerokosc);
                            odlegloscPoczatkowa=jednostka.obliczOdlegloscPoczatkowa(jednostka);

    for (int i=0;i<listaJednostek.size();i++)
         {
                 listaJednostek.get(i).tablica[0] = listaJednostek.get(i).tablica[2];
                 listaJednostek.get(i).tablica[1] = listaJednostek.get(i).tablica[3];
                 System.out.println(listaJednostek.get(i).imie + ":");
                 System.out.println("Obecna lokalizacja: Pole[" + jednostka.tablica[0] + "][" + jednostka.tablica[1] + "]");
                 if(jednostka.Lokalizacja.getClass()==Pozywienie.class)
                     System.out.println("Rodzaj pola: Pozywienie");
                 if(jednostka.Lokalizacja.getClass()==Schronienie.class)
                     System.out.println("Rodzaj pola: Schronienie");
                 if(jednostka.Lokalizacja.getClass()==Skaly.class)
                     System.out.println("Rodzaj pola: Skaly");
                 if(jednostka.Lokalizacja.getClass()==Woda.class)
                     System.out.println("Rodzaj pola: Woda");
                 do {
                     jednostka.Lokalizacja = jednostka.pobierzNowaLokalizacje(mapa.tablicaPol, mapa.dlugosc, mapa.szerokosc);
                     System.out.println("Nowa lokalizacja: Pole[" + jednostka.tablica[2] + "][" + jednostka.tablica[3] + "]");
                     if(jednostka.Lokalizacja.getClass()==Pozywienie.class)
                         System.out.println("Rodzaj pola: Pozywienie");
                     if(jednostka.Lokalizacja.getClass()==Schronienie.class)
                         System.out.println("Rodzaj pola: Schronienie");
                     if(jednostka.Lokalizacja.getClass()==Skaly.class)
                         System.out.println("Rodzaj pola: Skaly");
                     if(jednostka.Lokalizacja.getClass()==Woda.class)
                         System.out.println("Rodzaj pola: Woda");
                     odleglosc = jednostka.obliczOdleglosc(jednostka);
                     System.out.println("Odleglosc: " + odleglosc);
                     if (!jednostka.czyDobraOdlegosc(odleglosc))
                         System.out.println("Za daleko. Pobieranie nowej lokalizacji...");
                 } while (!jednostka.czyDobraOdlegosc(odleglosc));
                 jednostka.poziomWytrzymalosci=jednostka.zmniejszWytrzymalosc(odleglosc);
                 if(jednostka.Lokalizacja.getClass()==Pozywienie.class)
                 {
                     if(jednostka.poziomGlodu>=10)
                     jednostka.poziomGlodu=jednostka.zmniejszGlod();
                 }
                 else if(jednostka.Lokalizacja.getClass()==Schronienie.class)
                 {
                     if(jednostka.poziomWytrzymalosci<=90)
                     jednostka.poziomWytrzymalosci=jednostka.zwiekszWytrzymalosc();
                 }
                 else if(jednostka.Lokalizacja.getClass()==Skaly.class)
                 {
                     if(jednostka.poziomZdrowia>=20)
                     jednostka.poziomZdrowia=jednostka.zmniejszZdrowie();
                     if(jednostka.poziomGlodu<=80)
                     jednostka.poziomGlodu=jednostka.zwiekszGlod();
                 }
                 else if(jednostka.Lokalizacja.getClass()==Woda.class)
                 {
                     if(jednostka.poziomZdrowia<=90)
                     jednostka.poziomZdrowia=jednostka.zwiekszZdrowie();
                 }
                 System.out.println("Poziom wytrzymalosci:"+jednostka.poziomWytrzymalosci);
                 System.out.println("Poziom zdrowia:"+jednostka.poziomZdrowia);
                 System.out.println("Poziom glodu:"+jednostka.poziomGlodu);
                 if(jednostka.poziomWytrzymalosci<=0||jednostka.poziomZdrowia<=0||jednostka.poziomGlodu>=100)
                     {
                         System.out.println("Jednostka "+jednostka.imie+ " umiera");
                     }
                 }